<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Betahaus Sofia Facility</title>

    <meta content="text/html; charset=utf-8" http-equiv="content-type">
    <meta content="width=device-width, initial-scale=1, maximum-scale=1" name="viewport">
    <meta content="True" name="HandheldFriendly">
    <meta content="320" name="MobileOptimized">
    <meta content="on" http-equiv="cleartype">

    <base href="/">
    <link rel="shortcut icon" href="icon.png">
    <link rel="manifest" href="manifest.json">

    <% // Spinner %>
    <style>
      <%
        const primary = '#2980b9';
        const spinnerSize = 300;
        const prefixes = {
          animation: ['-webkit-', ''],
          keyframes: ['-webkit-', ''],
          transform: ['-webkit-', '-ms-', '']
        };
        const prefixed = (type, value, separator) => prefixes[type].map((prefix) => prefix + value.trim()).join(separator || ' ');
        const round = (value) => Math.round(value * 100) / 100;
        const numberOfConcentricCircles = 5;
      %>

      body {
        background: <%= primary %>;
      }

      #spinner-view {
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -150px;
        margin-left: -150px;

        transition: all 0.3s cubic-bezier(0.33, -0.69, .25, 1);
      }

      #spinner-view.loaded {
        opacity: 0;

        <%= prefixed('transform', `
        transform: scale(0);
        `) %>
      }

      .spinner {
        width: <%= spinnerSize %>px;
        height: <%= spinnerSize %>px;
      }

      .spinner .from-center,
      .spinner .from-top,
      .spinner .from-left {
        stroke: white;
      }

      .spinner .from-center {
        stroke-width: 5;
        fill: <%= primary %>;

        <%= prefixed('animation', `
        animation: expand-from-center 2s linear infinite;
        `) %>
      }

      <% for (let index = 1; index <= numberOfConcentricCircles; index++) { %>
      .spinner .from-center:nth-of-type(<%= index %>) {
        <%= prefixed('animation', `
        animation-delay: ${round(0.2 * index)}s;
        `) %>
      }
      <% } %>

      <% prefixes.keyframes.forEach((prefix) => { %>
      @<%= prefix %>keyframes expand-from-center {
        0% {
          opacity: 0;
          r: 40;
        }
        20%, 40% {
          opacity: 0.2;
        }
        30% {
          opacity: 0.4;
        }
        100% {
          opacity: 0;
          r: 150;
        }
      }
      <% }); %>

      .spinner .from-top,
      .spinner .from-left {
        stroke-width: 10;
        stroke-linejoin: round;
        fill: none;
      }

      .spinner .from-top {
        <%= prefixed('animation', `
        animation: assemble-from-top 0.6s cubic-bezier(0, 0, 0, 1);
        `) %>

        <%= prefixed('animation', `
        animation-fill-mode: forwards;
        `) %>
      }

      <% prefixes.keyframes.forEach((prefix) => { %>
      @<%= prefix %>keyframes assemble-from-top {
        0% {
          opacity: 0;
          stroke-dasharray: 0% 100%;
          stroke-dashoffset: 0%;
        }
        100% {
          opacity: 1;
          stroke-dasharray: 30% 100%;
          stroke-dashoffset: -64%;
        }
      }
      <% }); %>

      .spinner .from-left {
        <%= prefixed('animation', `
        animation: assemble-from-left 0.6s cubic-bezier(0, 0, 0, 1);
        `) %>

        <%= prefixed('animation', `
        animation-fill-mode: forwards;
        `) %>
      }

      <% prefixes.keyframes.forEach((prefix) => { %>
      @<%= prefix %>keyframes assemble-from-left {
        0% {
          opacity: 0;
          stroke-dasharray: 0% 100%;
          stroke-dashoffset: 0%;
        }
        100% {
          opacity: 1;
          stroke-dasharray: 30% 100%;
          stroke-dashoffset: -108.25%;
        }
      }
      <% }); %>
    </style>
  </head>

  <body>
    <div id="container"></div>

    <% // Spinner displayed until the application loads %>
    <div id="spinner-view">
      <svg class="spinner" viewBox="0, 0, <%= spinnerSize %>, <%= spinnerSize %>">
        <% for (let index = 1; index <= numberOfConcentricCircles; index++) { %>
        <circle class="from-center" cx="<%= spinnerSize / 2 %>" cy="<%= spinnerSize / 2 %>"></circle>
        <% } %>

        <path
          class="from-top"
          d="
            M300,10
            C300,10 160,30 150,110
            L140,180
          "
        />

        <path
          class="from-left"
          d="
            M-150,300
            C-150,300 0,140 140,176
            c0,0 20,5 25,-15
            c0,0 10,-40 -20,-15
          "
        />

        Loading...
      </svg>
    </div>

    <% // Embedded form %>
    <% /* %>
    <iframe
      src="https://docs.google.com/forms/d/e/1FAIpQLSeGiloUO-HcDpf4V_yAnDNdDkfRPVeJGGF2Y2f6vt-lpeS-Yg/viewform?embedded=true"
      width="100%"
      height="1600px"
      frameborder="0"
      marginheight="0"
      marginwidth="0"
    >
      Loading...
    </iframe>
    <% */ %>

    <% // Application scripts %>
    <script src="https://www.gstatic.com/firebasejs/3.7.1/firebase.js"></script>
  </body>
</html>
